/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventas.Vista;


import Seguridad.Controlador.clsBitacora;
import Ventas.Controlador.clsCotizacion;
import Seguridad.Controlador.clsUsuarioConectado;
import Ventas.Controlador.clsTienda;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author visitante
 */
public class frmCotizacion extends javax.swing.JInternalFrame {

    public void llenadoDeCombos() {
        /*EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        List<Empleado> empleados = empleadoDAO.select();
        cbox_empleado.addItem("Seleccione una opción");
        for (int i = 0; i < empleados.size(); i++) {
            cbox_empleado.addItem(empleados.get(i).getNombreEmpleado());
        } */
    }


    private DefaultTableModel modeloTabla;
    
    public frmCotizacion() {
        initComponents();
        modeloTabla = (DefaultTableModel) tblCotActual.getModel();
        llenadoDeTablasProductos();
        llenadoDeCombos();
    }

    int codigoAplicacion = 3004;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb2Cotizacion = new javax.swing.JLabel();
        lbusuCotizacion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbCodProdCot = new javax.swing.JLabel();
        lbCotActual = new javax.swing.JLabel();
        lbCantProdCot = new javax.swing.JLabel();
        lbTotalCot = new javax.swing.JLabel();
        txtTotalCot = new javax.swing.JTextField();
        btnAgregarCot = new javax.swing.JButton();
        txtCodProdCot = new javax.swing.JTextField();
        btnModificarCot = new javax.swing.JButton();
        txtCantProdCot = new javax.swing.JTextField();
        btnEliminarCot = new javax.swing.JButton();
        jScrollPaneCotActual = new javax.swing.JScrollPane();
        tblCotActual = new javax.swing.JTable();
        jScrollPaneProdDispCot = new javax.swing.JScrollPane();
        tblProdDispCot = new javax.swing.JTable();
        lbCantProdCot1 = new javax.swing.JLabel();
        txtIdClienteCot = new javax.swing.JTextField();
        txtIdVendedorCot = new javax.swing.JTextField();
        btnRegistrarCot = new javax.swing.JButton();
        lbInstCot = new javax.swing.JLabel();
        lbIdClienteCot = new javax.swing.JLabel();
        lbIdVendedorCot = new javax.swing.JLabel();
        btnAyudaCot = new javax.swing.JButton();

        lb2Cotizacion.setForeground(new java.awt.Color(204, 204, 204));
        lb2Cotizacion.setText(".");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cotizaciones");
        setVisible(true);

        lbCodProdCot.setText("Codigo del Producto:");

        lbCotActual.setText("Cotización Actual:");

        lbCantProdCot.setText("Cantidad del Producto:");

        lbTotalCot.setText("TOTAL DE LA COTIZACIÓN:");

        txtTotalCot.setEditable(false);

        btnAgregarCot.setText("Agregar");
        btnAgregarCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCotActionPerformed(evt);
            }
        });

        btnModificarCot.setText("Modificar");
        btnModificarCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCotActionPerformed(evt);
            }
        });

        btnEliminarCot.setText("Eliminar");
        btnEliminarCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCotActionPerformed(evt);
            }
        });

        tblCotActual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Producto", "Cantidad", "SubTotal"
            }
        ));
        jScrollPaneCotActual.setViewportView(tblCotActual);

        tblProdDispCot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneProdDispCot.setViewportView(tblProdDispCot);

        lbCantProdCot1.setText("Productos Disponibles:");

        btnRegistrarCot.setText("Registrar Cotización");
        btnRegistrarCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCotActionPerformed(evt);
            }
        });

        lbInstCot.setText("Para registrar esta cotización debes ingresar los siguientes datos:");

        lbIdClienteCot.setText("ID del Cliente:");

        lbIdVendedorCot.setText("ID del Vendedor:");

        btnAyudaCot.setText("Ayuda");
        btnAyudaCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaCotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbInstCot)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbIdClienteCot)
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodProdCot, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdClienteCot, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbCodProdCot)
                                .addGap(247, 247, 247))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbCotActual)
                                .addGap(11, 11, 11)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lbIdVendedorCot)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantProdCot, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdVendedorCot, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(jScrollPaneProdDispCot, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbCantProdCot1)
                        .addGap(174, 174, 174))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(btnAgregarCot)
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnModificarCot)
                                .addGap(93, 93, 93)
                                .addComponent(btnEliminarCot))
                            .addComponent(lbCantProdCot)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRegistrarCot)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPaneCotActual, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(lbTotalCot))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addComponent(txtTotalCot, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(btnAyudaCot)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lbInstCot)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbCantProdCot1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdClienteCot, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbIdClienteCot)
                            .addComponent(txtIdVendedorCot, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbIdVendedorCot))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbCodProdCot)
                            .addComponent(txtCodProdCot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantProdCot, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCantProdCot)))
                    .addComponent(jScrollPaneProdDispCot, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregarCot)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEliminarCot)
                        .addComponent(btnModificarCot)))
                .addGap(31, 31, 31)
                .addComponent(lbCotActual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCotActual, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(64, 64, 64))
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(lbTotalCot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotalCot, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnRegistrarCot)
                .addGap(36, 36, 36)
                .addComponent(btnAyudaCot)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Carlos Emanuel Hernandez Garcia
    //9959-21-363
    private void btnEliminarCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCotActionPerformed
        // TODO add your handling code here:
int codigoProducto = Integer.parseInt(txtCodProdCot.getText());

// Lógica para buscar y eliminar la fila en la JTable
DefaultTableModel model = (DefaultTableModel) tblCotActual.getModel();
int rowCount = model.getRowCount();
double suma = 0.0; // Variable para almacenar la suma de los subtotales
boolean codigoEncontrado = false; // Variable para indicar si se encuentra el código en la tabla

for (int i = 0; i < rowCount; i++) {
    int codigo = (int) model.getValueAt(i, 0); // Obtener el valor de la columna "Codigo Producto"

    if (codigo == codigoProducto) {
        model.removeRow(i); // Eliminar la fila si se encuentra una coincidencia
        rowCount--; // Reducir el número de filas después de eliminar una fila
        i--; // Decrementar el índice para evitar saltar la siguiente fila en la iteración
        codigoEncontrado = true; // Marcar el código como encontrado
    } else {
        double subtotal = (double) model.getValueAt(i, 2); // Obtener el valor del subtotal
        suma += subtotal; // Sumar el subtotal a la suma
    }

}
if (!codigoEncontrado) {
    JOptionPane.showMessageDialog(null, "No existe este código en tu cotización actual", "Error", JOptionPane.ERROR_MESSAGE);
}
txtTotalCot.setText(String.valueOf(suma));
limpiarTextos(); 

    }//GEN-LAST:event_btnEliminarCotActionPerformed
//Carlos Javier Sandoval Catalán
//9959-21-1324
     public void llenadoDeTablasProductos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("proCodigo");
        modelo.addColumn("proNombre");
        modelo.addColumn("proPrecios");
        modelo.addColumn("proExistencias");
        clsCotizacion producto = new clsCotizacion();
        //VendedorDAO vendedorDAO = new VendedorDAO();
        List<clsCotizacion> listaProductos = producto.getListadoProductos();
        tblProdDispCot.setModel(modelo);
        String[] dato = new String[4];
        for (int i = 0; i < listaProductos.size(); i++) {
            dato[0] = Integer.toString(listaProductos.get(i).getIdProducto());
            dato[1] = listaProductos.get(i).getNombreProducto();
            dato[2] = Double.toString(listaProductos.get(i).getPrecioProducto());
            dato[3] = Double.toString(listaProductos.get(i).getExistenciaProducto());
            modelo.addRow(dato);
        }              


    }                
//Meyglin del Rosario Rosales Ochoa 
// 9959 - 21 - 4490
    private void btnModificarCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCotActionPerformed
        // TODO add your handling code here:
        
        // Obtener los datos ingresados
        int codigoProducto = Integer.parseInt(txtCodProdCot.getText());
        int nuevaCantidad = Integer.parseInt(txtCantProdCot.getText());
        clsCotizacion cotizacion = new clsCotizacion();
        
        
// Verificar si el código de producto existe en la tabla de cotización
        boolean productoEncontrado = false;
        int filaModificar = -1;
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            int codigo = (int) modeloTabla.getValueAt(i, 0);
            if (codigo == codigoProducto) {
                productoEncontrado = true;
                filaModificar = i;
                break;
            }
        }
        if (productoEncontrado) {
                // Actualizar el subtotal y el total
            if (cotizacion.verificarExistencias(codigoProducto) >= nuevaCantidad) {
                double precio = cotizacion.obtenerPrecioProducto(codigoProducto);
                double sumaSubTotal = precio * nuevaCantidad;
                
                // Actualizar la cantidad en la fila correspondiente
                modeloTabla.setValueAt(nuevaCantidad, filaModificar, 1);
                
                // Actualizar el subtotal en la fila correspondiente
                modeloTabla.setValueAt(sumaSubTotal, filaModificar, 2);
                
               // Actualizar el total
                double suma = 0.0;
                int columnaSubTotal = 2;
                int filas = tblCotActual.getRowCount();
                
                for (int i = 0; i < filas; i++) {
                    double valor = (double) tblCotActual.getValueAt(i, columnaSubTotal);
                    suma += valor;
                }
                
                txtTotalCot.setText(String.valueOf(suma));
            }else {
                JOptionPane.showMessageDialog(null, "El producto no tiene existencias.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(null, "El código de producto no existe en la cotización actual.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        limpiarTextos(); 
        
    }//GEN-LAST:event_btnModificarCotActionPerformed
   public void limpiarTextos()
    {
        txtCantProdCot.setText("");
        txtCodProdCot.setText("");
    }
   
      public void limpiarTextosCliente()
    {
        txtIdClienteCot.setText("");
        txtIdVendedorCot.setText("");
    }

//María José Véliz Ochoa 
//9959-21-5909

    private void btnAgregarCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCotActionPerformed
int codigoProducto = Integer.parseInt(txtCodProdCot.getText());
    int cantidad = Integer.parseInt(txtCantProdCot.getText());
    clsCotizacion cotizacion = new clsCotizacion();
    
    // Verificar si el producto ya está registrado en la tabla
    boolean productoExistente = false;
    int filas = tblCotActual.getRowCount();
    for (int i = 0; i < filas; i++) {
        int codigo = (int) tblCotActual.getValueAt(i, 0);
        if (codigo == codigoProducto) {
            productoExistente = true;
            break;
        }
    }
    
    if (productoExistente) {
        JOptionPane.showMessageDialog(this, "Este Producto ya está registrado, puedes intentar MODIFICAR.");
    } else if (cotizacion.verificarExistencias(codigoProducto) >= cantidad) {
        double precio = cotizacion.obtenerPrecioProducto(codigoProducto);
        double sumaSubTotal = precio * cantidad;
        
        // Agregar los datos a la tabla
        Object[] fila = {codigoProducto, cantidad, sumaSubTotal};
        modeloTabla.addRow(fila);

        double suma = 0.0;
        int columnaSubTotal = 2; 

        filas = tblCotActual.getRowCount();
        for (int i = 0; i < filas; i++) {
            double valor = (double) tblCotActual.getValueAt(i, columnaSubTotal);
            suma += valor;
        }
        
        txtTotalCot.setText(String.valueOf(suma));
    } else {
        JOptionPane.showMessageDialog(this, "El producto no existe o no tiene existencias.");
    }
    
    limpiarTextos();
    }//GEN-LAST:event_btnAgregarCotActionPerformed
//Carlos Javier Sandoval Catalán
//9959-21-1324
    private void btnRegistrarCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCotActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tblCotActual.getModel();
                    if (txtIdClienteCot.getText().isEmpty() || txtIdVendedorCot.getText().isEmpty() || modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado la información necesaria", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
        clsCotizacion cotizacion = new clsCotizacion();
        int idCliente = Integer.parseInt(txtIdClienteCot.getText());
                int idVendedor = Integer.parseInt(txtIdVendedorCot.getText());
                double totalCotizacion = Double.parseDouble(txtTotalCot.getText());
                LocalDate fechaActual = LocalDate.now();

                
                // Registrar en la tabla tbl_cotizacion
                cotizacion.registrarCotizacion(idCliente, idVendedor, fechaActual, totalCotizacion);
                
                // Obtener el último valor agregado en la columna cotid de tbl_cotizacion
                int cotizacionId = cotizacion.obtenerUltimoIdCotizacion();
                
                // Obtener los datos de la JTable tblCotActual y registrar en tbl_cotdetalle
                cotizacion.registrarCotizacionDetalle(cotizacionId, modelo);
                limpiarTextos();
                limpiarTextosCliente();
                int rowCount = modelo.getRowCount();
                for (int i = 0; i < rowCount; i++) {
                modelo.removeRow(i); // Eliminar la fila si se encuentra una coincidencia
                rowCount--; // Reducir el número de filas después de eliminar una fila
                i--; // Decrementar el índice para evitar saltar la siguiente fila en la iteración
                }
                
                txtTotalCot.setText("");
                int resultadoBitacora=0;
                    clsBitacora bitacoraRegistro = new clsBitacora();
                    resultadoBitacora = bitacoraRegistro.setIngresarBitacora(clsUsuarioConectado.getIdUsuario(),codigoAplicacion,"INS"); 
                JOptionPane.showMessageDialog(null, "Cotización #" + cotizacionId + " ha sido registrada con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                
    }//GEN-LAST:event_btnRegistrarCotActionPerformed
//Carlos Javier Sandoval Catalán
//9959-21-1324
    private void btnAyudaCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaCotActionPerformed
        // TODO add your handling code here:
        //Carlos Javier Sandoval Catalán
        //9959-21-1324
        try {
            if ((new File("src\\main\\java\\ventas\\ayuda\\ayudacot.chm")).exists()) {
                Process p = Runtime
                .getRuntime()
                .exec("rundll32 url.dll,FileProtocolHandler src\\main\\java\\ventas\\ayuda\\ayudacot.chm");
                p.waitFor();
            } else {
                System.out.println("La ayuda no fue encontrada");
            }
            //System.out.println("Correcto");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnAyudaCotActionPerformed
         
    


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCot;
    private javax.swing.JButton btnAyudaCot;
    private javax.swing.JButton btnEliminarCot;
    private javax.swing.JButton btnModificarCot;
    private javax.swing.JButton btnRegistrarCot;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneCotActual;
    private javax.swing.JScrollPane jScrollPaneProdDispCot;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb2Cotizacion;
    private javax.swing.JLabel lbCantProdCot;
    private javax.swing.JLabel lbCantProdCot1;
    private javax.swing.JLabel lbCodProdCot;
    private javax.swing.JLabel lbCotActual;
    private javax.swing.JLabel lbIdClienteCot;
    private javax.swing.JLabel lbIdVendedorCot;
    private javax.swing.JLabel lbInstCot;
    private javax.swing.JLabel lbTotalCot;
    private javax.swing.JLabel lbusuCotizacion;
    private javax.swing.JTable tblCotActual;
    private javax.swing.JTable tblProdDispCot;
    private javax.swing.JTextField txtCantProdCot;
    private javax.swing.JTextField txtCodProdCot;
    private javax.swing.JTextField txtIdClienteCot;
    private javax.swing.JTextField txtIdVendedorCot;
    private javax.swing.JTextField txtTotalCot;
    // End of variables declaration//GEN-END:variables


}